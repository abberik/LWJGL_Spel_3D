#version 400 core

in vec3 position;
in vec2 texturkoordinater;
in vec3 normal;

out vec2 pass_textur_koordinater; 
out vec3 yt_normal;
out vec3 tillLjusVektor;
out vec3 ljuspos;
out vec3 tillKameraVektor;
out float visibilitet;

uniform mat4 transformationsmatris;
uniform mat4 projektionsmatris;
uniform mat4 vymatris;
uniform vec3 ljus_position;

const float dimm_densitet = 0.007;
const float gradient = 1.5;

void main(void){
	
	vec4 varld_position = transformationsmatris * vec4(position,1.0);
	
	gl_Position = projektionsmatris * vymatris *  varld_position;
	
	vec4 positionRelativtTillKamera = vymatris * varld_position;
	
	pass_textur_koordinater = texturkoordinater;
	
	yt_normal = (transformationsmatris * vec4(normal,0.0)).xyz;
	
	tillLjusVektor = ljus_position - varld_position.xyz;
	
	tillKameraVektor = (inverse(vymatris) * vec4(0.0,0.0,0.0,1.0)).xyz - varld_position.xyz;
	
	
	float avstand = length(positionRelativtTillKamera.xyz);
	visibilitet = exp(-pow((avstand * dimm_densitet),gradient));
	visibilitet = clamp(visibilitet,0.0,1.0);
}