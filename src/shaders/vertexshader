#version 400 core

in vec3 position;
in vec2 texturkoordinater;
in vec3 normal;

out vec2 pass_textur_koordinater; 
out vec3 yt_normal;
out vec3 tillLjusVektor;
out vec3 ljuspos;
out vec3 tillKameraVektor;

uniform mat4 transformationsmatris;
uniform mat4 projektionsmatris;
uniform mat4 vymatris;
uniform vec3 ljus_position;

uniform float anvandFakeLjus;

void main(void){
	
	vec4 varld_position = transformationsmatris * vec4(position,1.0);
	
	gl_Position = projektionsmatris * vymatris *  varld_position;
	
	pass_textur_koordinater = texturkoordinater;
	
	vec3 aktuellNormal = normal;
	
	if(anvandFakeLjus > 0.5){
	
		aktuellNormal = vec3(0.0,1.0,0.0);
	
	}
	
	yt_normal = (transformationsmatris * vec4(aktuellNormal,0.0)).xyz;
	
	tillLjusVektor = ljus_position - varld_position.xyz;
	
	tillKameraVektor = (inverse(vymatris) * vec4(0.0,0.0,0.0,1.0)).xyz - varld_position.xyz;
	
}